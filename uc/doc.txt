Class modifiers:
----------------
extends OtherClass
-abstract			do not allow instantiation, do not include in "new property instance" list ...
noexport			do not create C++ header for this class (created separately)
-hidecategories(list)		do not show listed property categories in editor (for parent class fields)
-exportstructs			export all structs declared in this class to C++ header; this is equivalent to
				declaring all structs in the class as "native export"
-[no]editinlinenew		allow class creation from editor; propagated to all childs, can be overriden with no...
-dependson(class list)		force to compile script after this class(es)
-native				create C++ code for class; this class should be derived from another native class


Variable modifiers:
-------------------
var				not editable prop
var()				editable prop
var(Group)			editable prop, displayed in property editor in "Group"
editconst			do not allow to edit in editor
editfixedsize			disallow resizing of dynamic array variable
noexport			do not export field, should be explicitly descrived in [struct]cpptext
-transient			do not serialize property
-native				do not serialize as property, serialized by C++ code


Struct modifiers:
-----------------
-native				create structure in C++ header (C++ structure name = "F" + StructName)
extends OtherStruct		derived structure


Native types:
-------------
bool
byte
int
float
pointer				syntax: "pointer varname" or "pointer varname{type}"
				note: {type} will be used in C++ header, internally ignored
string
type[size]			static array
array<type>			dynamic array
struct
[StructOrClassName]


UE extra native types:
----------------------
name
vector
rotator
class<ClassName>		RTTI object
class'Name'			will load class instance from package


Other notes:
------------
cpptext {}			describe C++ code for class
structcpptext {}		describe C++ code for non-class structure
-structdefaultproperties {}	create constructor for native structure?

Constants:
----------
const name = value		declare constant (will be converted to #define in cpp)
